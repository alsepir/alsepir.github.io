{"version":3,"sources":["components/header.tsx","store/reducers/cart.ts","components/carCard.tsx","components/counter.tsx","components/modal.tsx","views/main.tsx","views/cart.tsx","api.ts","navigation.tsx","reportWebVitals.ts","store/index.ts","index.tsx","theme.ts"],"names":["Header","props","history","useHistory","location","useLocation","cartItems","useSelector","state","cart","items","length","Box","tag","direction","align","justify","background","pad","left","right","vertical","elevation","style","zIndex","onClick","replace","Car","Heading","level","margin","title","Button","pathname","push","Stack","anchor","Cart","size","horizontal","round","Text","color","initialState","fetching","sending","message","REQUEST_CART","SEND_CART_SUCCESS","SEND_CART_ERROR","SET_CART_ITEM","SET_CART_ITEM_AMOUNT","SEND_CART","CONFIRM_CART_MESSAGE","RESET_CART","addHelper","newItem","filter","item","data","id","amount","setAmountHelper","map","cartReducer","action","type","payload","CarouselContainer","styled","div","theme","css","CarCard","quantity","useState","setAmount","dispatch","useDispatch","addToCart","setCartItemAction","onClickCounter","value","setCartItemAmountAction","ResponsiveContext","Consumer","Card","width","imgs","Carousel","fill","index","Image","fit","src","name","top","bottom","description","price","flex","primary","label","container","buttonLeft","borderTopRightRadius","borderBottomRightRadius","buttonRight","borderTopLeftRadius","borderBottomLeftRadius","Counter","border","side","Modal","visible","Layer","onEsc","onClose","onClickOutside","MainView","overflow","List","children","CartView","dispath","totalPrice","reduce","acc","getState","a","fetch","Math","random","method","headers","body","JSON","stringify","res","status","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","Grommet","global","colors","brand","backgroundCard","font","family","height","full","document","getElementById"],"mappings":"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","file":"static/js/main.5f7138a2.chunk.js","sourcesContent":["import { useSelector } from 'react-redux'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport { Box, Button, Heading, Stack, Text } from 'grommet'\r\nimport { Car, Cart } from 'grommet-icons'\r\nimport { RootState } from '../store/index'\r\n\r\ninterface Props {\r\n  title?: string\r\n}\r\n\r\nconst Header = (props: Props) => {\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n  const cartItems = useSelector((state: RootState) => state.cart.items.length)\r\n\r\n  const onCartClick = () => {\r\n    if (location.pathname !== '/cart') history.push('/cart')\r\n  }\r\n\r\n  const goHome = () => {\r\n    history.replace('/')\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      tag='header'\r\n      direction='row'\r\n      align='center'\r\n      justify='between'\r\n      background='brand'\r\n      pad={{ left: 'medium', right: 'small', vertical: 'small' }}\r\n      elevation='medium'\r\n      style={{ zIndex: 1 }}\r\n    >\r\n      <Box\r\n        direction='row'\r\n        align='center'\r\n        justify='between'\r\n        onClick={goHome}\r\n      >\r\n        <Box pad={{ right: 'small' }}>\r\n          <Car />\r\n        </Box>\r\n        <Heading level='3' margin='none'>{props.title}</Heading>\r\n      </Box>\r\n      <Button onClick={onCartClick}>\r\n        <Stack anchor=\"top-right\">\r\n          <Cart size=\"30px\" />\r\n          <Box\r\n            background=\"brand\"\r\n            pad={{ horizontal: '2px' }}\r\n            round\r\n          >\r\n            {!!cartItems && <Text color='white'>{cartItems}</Text>}\r\n          </Box>\r\n        </Stack>\r\n      </Button>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Header","import { ThunkAction } from 'redux-thunk'\r\nimport { IReduxAction } from '../types'\r\nimport { IAutoModel } from '../types'\r\nimport { RootState } from '../'\r\nimport { postCart } from '../../api'\r\n\r\nexport interface CartStateItem {\r\n  readonly data: IAutoModel\r\n  readonly amount: number\r\n}\r\n\r\ninterface CartState {\r\n  readonly sending: boolean\r\n  readonly fetching: boolean\r\n  readonly items: CartStateItem[]\r\n  readonly message: string\r\n}\r\n\r\nconst initialState: CartState = {\r\n  fetching: false,\r\n  sending: false,\r\n  items: [],\r\n  message: ''\r\n}\r\n\r\ntype CartAction =\r\n  | IReduxAction<typeof REQUEST_CART>\r\n  | IReduxAction<typeof SEND_CART_SUCCESS, string>\r\n  | IReduxAction<typeof SEND_CART_ERROR, string>\r\n  | IReduxAction<typeof SET_CART_ITEM, CartStateItem>\r\n  | IReduxAction<typeof SET_CART_ITEM_AMOUNT, CartStateItem>\r\n  | IReduxAction<typeof SEND_CART>\r\n  | IReduxAction<typeof CONFIRM_CART_MESSAGE>\r\n  | IReduxAction<typeof RESET_CART>\r\n\r\n// types\r\nconst REQUEST_CART = 'REQUEST_CART'\r\nconst SEND_CART_SUCCESS = 'SEND_CART_SUCCESS'\r\nconst SEND_CART_ERROR = 'SEND_CART_ERROR'\r\nconst SET_CART_ITEM = 'SET_CART_ITEM'\r\nconst SET_CART_ITEM_AMOUNT = 'SET_CART_ITEM_AMOUNT'\r\nconst SEND_CART = 'SEND_CART'\r\nconst CONFIRM_CART_MESSAGE = 'CONFIRM_CART_MESSAGE'\r\nconst RESET_CART = 'RESET_CART'\r\n\r\n// actions\r\nexport const requestCartAction = () => ({ type: REQUEST_CART, })\r\nexport const setCartAction = () => ({ type: SEND_CART_SUCCESS, })\r\nexport const setCartErrorAction = () => ({ type: SEND_CART_ERROR, })\r\nexport const setCartItemAction = (item: IAutoModel, amount: number) => ({ type: SET_CART_ITEM, payload: { data: item, amount } })\r\nexport const setCartItemAmountAction = (item: IAutoModel, amount: number) => ({ type: SET_CART_ITEM_AMOUNT, payload: { data: item, amount } })\r\nexport const sendCartAction = (): ThunkAction<void, RootState, null, CartAction> => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: SEND_CART })\r\n      const res = await postCart(getState().cart.items)\r\n      \r\n      if (res.status >= 200 && res.status < 300) {\r\n        dispatch({ type: SEND_CART_SUCCESS, payload: 'Заказ успешно оформлен, наш менеджер свяжется с вами' })\r\n        dispatch({ type: RESET_CART })\r\n      } else {\r\n        dispatch({ type: SEND_CART_ERROR, payload: 'Ошибка сервера' })\r\n      }\r\n    } catch (err) {\r\n      dispatch({ type: SEND_CART_ERROR, payload: 'Ошибка сервера' })\r\n    }\r\n  }\r\n}\r\nexport const confirmMessageAction = () => ({ type: CONFIRM_CART_MESSAGE, })\r\n\r\n\r\nconst addHelper = (items: CartStateItem[], newItem: CartStateItem) => {\r\n  const existItems = items.filter(item => item.data.id === newItem.data.id)\r\n  if (existItems.length > 0) return items\r\n  return [...items, { data: newItem.data, amount: newItem.amount }]\r\n}\r\n\r\nconst setAmountHelper = (items: CartStateItem[], newItem: CartStateItem) => {\r\n  return items.map(item => {\r\n    if (item.data.id === newItem.data.id) return newItem\r\n    else return item\r\n  })\r\n}\r\n\r\n// reducer\r\nconst cartReducer = (state = initialState, action: CartAction): CartState => {\r\n  switch (action.type) {\r\n    case REQUEST_CART:\r\n      return { ...state, fetching: true }\r\n    case SET_CART_ITEM:\r\n      return { ...state, items: addHelper(state.items, action.payload!) }\r\n    case SET_CART_ITEM_AMOUNT:\r\n      return { ...state, items: setAmountHelper(state.items, action.payload!) }\r\n    case SEND_CART:\r\n      return { ...state, sending: true }\r\n    case SEND_CART_SUCCESS:\r\n      return { ...state, sending: false, message: action.payload ?? '' }\r\n    case SEND_CART_ERROR:\r\n      return { ...state, sending: false, message: action.payload ?? '' }\r\n    case CONFIRM_CART_MESSAGE:\r\n      return { ...state, sending: false, message: '' }\r\n    case RESET_CART:\r\n      return { ...state, items: [] }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default cartReducer","import { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Card, Image, Box, Carousel, Heading, Button, Text, ResponsiveContext } from 'grommet'\r\nimport { Cart } from 'grommet-icons'\r\nimport { Counter } from '.'\r\nimport { IAutoModel } from '../store/types'\r\nimport { setCartItemAction, setCartItemAmountAction } from '../store/reducers/cart'\r\nimport styled, { css } from 'styled-components'\r\n\r\ninterface Props {\r\n  data: IAutoModel\r\n  type?: 'catalog' | 'cart'\r\n  amount?: number\r\n}\r\n\r\nconst CarCard = ({ data, type = 'catalog', amount: quantity }: Props) => {\r\n  const [amount, setAmount] = useState(!!quantity ? quantity : 1)\r\n  const dispatch = useDispatch()\r\n\r\n  const addToCart = () => {\r\n    if (!!amount)\r\n      dispatch(setCartItemAction(data, amount))\r\n  }\r\n\r\n  const onClickCounter = (value: number) => {\r\n    setAmount(value)\r\n    if (type === 'cart') dispatch(setCartItemAmountAction(data, value))\r\n  }\r\n\r\n  return (\r\n    <ResponsiveContext.Consumer>\r\n      {size => (\r\n        <Card style={{ width: '80vw' }} direction={size === 'small' ? 'column' : 'row'} background='backgroundCard'>\r\n          <CarouselContainer theme={{ size }}>\r\n            {data.imgs && <Carousel fill>\r\n              {data.imgs.map((item, index) => <Image key={index} fit='cover' src={item} />)}\r\n            </Carousel>}\r\n          </CarouselContainer>\r\n          <Box pad={{ vertical: '16px', horizontal: '16px' }}>\r\n            <Heading level={3} margin='none'>{data.name}</Heading>\r\n            <Heading level={4} margin={{ top: '10px', bottom: '10px', horizontal: 'none' }}>{data.type}</Heading>\r\n            <Text>{data.description}</Text>\r\n            <Text margin={{ top: '16px' }}>{`Цена: ${data.price}₽`}</Text>\r\n            <Box flex justify='end' align='center' margin={{ top: '24px', bottom: '0' }}>\r\n              <Counter\r\n                value={amount}\r\n                onClick={onClickCounter}\r\n              />\r\n              {type === 'catalog' && <Button\r\n                primary\r\n                margin={{ top: '8px' }}\r\n                onClick={addToCart}\r\n                label={\r\n                  <Box direction='row' justify='center'>\r\n                    <Text>Добавит в</Text>\r\n                    <Box margin={{ left: '10px' }}><Cart color='white' /></Box>\r\n                  </Box>\r\n                }\r\n              />}\r\n            </Box>\r\n          </Box>\r\n        </Card>\r\n      )\r\n      }\r\n    </ResponsiveContext.Consumer>\r\n  )\r\n}\r\n\r\nconst CarouselContainer = styled.div`\r\n  height: 400px;\r\n  width: 100%;\r\n\r\n  @media screen and (min-width: 960px) {\r\n    width: 400px;\r\n  }\r\n  @media screen and (min-width: 1200px) {\r\n    width: 600px;\r\n  }\r\n\r\n  ${props => props.theme.size === 'medium' && css`\r\n      width: 250px;\r\n  `\r\n  }\r\n`\r\n\r\nexport default CarCard","import { CSSProperties } from 'react'\r\nimport { Box, Text, Button } from 'grommet'\r\n\r\ninterface Props {\r\n  value: number\r\n  onClick: (value: number) => void\r\n}\r\n\r\nconst Counter = (props: Props) => {\r\n  const inc = () => { props.onClick(props.value + 1) }\r\n  const dec = () => { props.value > 0 && props.onClick(props.value - 1) }\r\n\r\n  return (\r\n    <Box direction='row' justify='between' style={container}>\r\n      <Button style={buttonLeft} label='-' onClick={dec} />\r\n      <Box flex align='center' justify='center' border={[{ color: 'brand', size: '2px', side: 'horizontal' }]}>\r\n        <Text>{props.value}</Text>\r\n      </Box>\r\n      <Button style={buttonRight} label='+' onClick={inc} />\r\n    </Box>\r\n  )\r\n}\r\n\r\nconst container: CSSProperties = {\r\n  width: '200px'\r\n}\r\n\r\nconst buttonLeft: CSSProperties = {\r\n  borderTopRightRadius: 0,\r\n  borderBottomRightRadius: 0,\r\n}\r\n\r\nconst buttonRight: CSSProperties = {\r\n  borderTopLeftRadius: 0,\r\n  borderBottomLeftRadius: 0,\r\n}\r\n\r\nexport default Counter\r\n","import { Box, Button, Layer, Text } from 'grommet'\r\n\r\ninterface Props {\r\n  visible: boolean\r\n  onClose: () => void\r\n  description?: string\r\n}\r\n\r\nconst Modal = (props: Props) => {\r\n  return (\r\n    <Box>\r\n      {props.visible && (\r\n        <Layer\r\n          onEsc={props.onClose}\r\n          onClickOutside={props.onClose}\r\n        >\r\n          <Box pad={{ horizontal: '24px', vertical: '24px' }} >\r\n            <Text margin={{ bottom: '24px' }}>{props.description}</Text>\r\n            <Box direction='row' justify='end'>\r\n              <Button label=\"Ок\" onClick={props.onClose} />\r\n            </Box>\r\n          </Box>\r\n        </Layer>\r\n      )\r\n      }\r\n    </Box >\r\n  )\r\n}\r\n\r\nexport default Modal","import { Box, List } from \"grommet\"\r\nimport { Header, CarCard } from '../components'\r\nimport data from '../data.json'\r\nimport { IAutoModel } from '../store/types'\r\n\r\nconst MainView = () => {\r\n  return (\r\n    <Box fill>\r\n      <Header\r\n        title='tesla-shop'\r\n      />\r\n      <Box direction='row' flex overflow={{ horizontal: 'hidden' }}>\r\n        <Box flex align='center' justify='start'>\r\n          <List\r\n            border={false}\r\n            data={data}\r\n            children={(item: IAutoModel) => <CarCard\r\n              key={item.id}\r\n              data={item}\r\n            />}\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default MainView\r\n","import { useSelector, useDispatch } from 'react-redux'\r\nimport { Box, List, Text, Button, } from \"grommet\"\r\nimport { Header, CarCard } from '../components'\r\nimport { RootState } from '../store/index'\r\nimport { CartStateItem, sendCartAction } from '../store/reducers/cart'\r\n\r\nconst CartView = () => {\r\n  const dispath = useDispatch()\r\n  const cartItems = useSelector((state: RootState) => state.cart.items)\r\n  const totalPrice = cartItems.reduce((acc, value) => acc + value.data.price * value.amount, 0)\r\n\r\n  const sendCart = () => {\r\n    dispath(sendCartAction())\r\n  }\r\n\r\n  return (\r\n    <Box fill>\r\n      <Header\r\n        title='tesla-shop'\r\n      />\r\n      <Box direction='row' flex overflow={{ horizontal: 'hidden' }}>\r\n        <Box flex align='center' justify='start'>\r\n          <List\r\n            border={false}\r\n            data={cartItems}\r\n            children={(item: CartStateItem) => <CarCard\r\n              type='cart'\r\n              key={item.data.id}\r\n              data={item.data}\r\n              amount={item.amount}\r\n            />}\r\n          />\r\n        </Box>\r\n      </Box>\r\n      {!!totalPrice && <Button\r\n        primary\r\n        margin={{ vertical: '16px', horizontal: '20vw' }}\r\n        onClick={sendCart}\r\n        label={\r\n          <Box direction='row' justify='center'>\r\n            <Text>Оплатить</Text>\r\n            <Text margin={{ left: '20px', }}>{`${totalPrice}₽`}</Text>\r\n          </Box>}\r\n      />}\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default CartView\r\n","import { CartStateItem } from './store/reducers/cart'\r\n\r\nexport const postCart = (items: CartStateItem[]) => {\r\n  return fetch(`https://httpbin.org/status/${Math.random() > 0.5 ? 400 : 200}`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(items)\r\n  })\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport MainView from './views/main'\nimport CartView from './views/cart'\nimport { Modal } from './components'\nimport { RootState } from './store'\nimport { confirmMessageAction } from './store/reducers/cart'\n\nfunction App() {\n  const message = useSelector((state: RootState) => state.cart.message)\n  const dispatch = useDispatch()\n\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Route path='/cart'>\n            <CartView />\n          </Route>\n          <Route path='/'>\n            <MainView />\n          </Route>\n        </Switch>\n      </Router>\n\n      <Modal\n        visible={!!message}\n        onClose={() => dispatch(confirmMessageAction())}\n        description={message}\n      />\n    </>\n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport cart from './reducers/cart'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst rootReducer = combineReducers({\r\n  cart,\r\n})\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n)\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\n\r\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './navigation'\nimport reportWebVitals from './reportWebVitals'\nimport { Grommet } from 'grommet'\nimport { theme } from './theme'\nimport store from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Grommet theme={theme} full>\n        <App />\n      </Grommet>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","export const theme = {\r\n  global: {\r\n    colors: {\r\n      brand: '#228BE6',\r\n      backgroundCard: '#228BE633',\r\n    },\r\n    font: {\r\n      family: 'Roboto',\r\n      size: '18px',\r\n      height: '20px',\r\n    },\r\n  },\r\n};"],"sourceRoot":""}