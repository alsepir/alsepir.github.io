{"version":3,"sources":["views/main/main.tsx","components/input.tsx","components/button.tsx","api.ts","store/reducers/auth.ts","store/reducers/user.ts","views/auth/auth.tsx","utils/validation.ts","App.tsx","reportWebVitals.ts","store/index.ts","index.tsx"],"names":["Main","props","history","useHistory","userLogin","useSelector","state","user","login","useEffect","replace","Input","value","onChange","placeholder","orderId","error","calssName","type","useState","focus","setFocus","showPass","setShowPass","id","filledCSS","focusCSS","ErrorCSS","className","onBlur","htmlFor","e","target","onFocus","onClick","Button","title","tabIndex","postSignIn","a","password","fetch","method","headers","body","JSON","stringify","status","postRegistration","email","initialState","fetching","REQUEST_AUTH","SET_AUTH","SET_AUTH_ERROR","authReducer","action","REQUEST_USER","SET_USER","SET_USER_ERROR","setUserAction","payload","userReducer","AuthView","reg","setReg","setLogin","setPassword","setEmail","loginError","setLoginError","passwordError","setPasswordError","emailError","setEmailError","nodeRef","React","useRef","dispatch","useDispatch","validation","length","validationLogin","validationPassword","test","toLowerCase","validationEmail","sendForm","res","SwitchTransition","mode","CSSTransition","in","timeout","classNames","ref","onSubmit","preventDefault","Number","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","auth","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1627af70.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { RootState } from '../../store'\r\n\r\ninterface Props { }\r\n\r\nconst Main = (props: Props) => {\r\n  const history = useHistory()\r\n  const userLogin = useSelector((state: RootState) => state.user.login)\r\n\r\n  useEffect(() => {\r\n    if (!userLogin) {\r\n      history.replace('/')\r\n    }\r\n  }, [userLogin, history])\r\n\r\n  return (\r\n    <div>\r\n      {`Привет, ${userLogin}`}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Main","import React, { useState } from 'react'\r\nimport './input.scss'\r\n\r\ninterface Props {\r\n  placeholder?: string\r\n  orderId?: number\r\n  value?: string\r\n  onChange?: (value: string) => void\r\n  error?: string\r\n  calssName?: string\r\n  type?: 'password' | 'text'\r\n}\r\n\r\nconst Input = ({ value, onChange, placeholder, orderId = 1, error, calssName, type = 'text' }: Props) => {\r\n  const [focus, setFocus] = useState(false)\r\n  const [showPass, setShowPass] = useState(false)\r\n  const id = `input ${orderId}`\r\n\r\n  const onFocus = () => setFocus(true)\r\n  const onBlur = () => setFocus(false)\r\n\r\n  const filledCSS = !!value ? 'input__placeholder_filled' : ''\r\n  const focusCSS = focus ? 'input__placeholder_focus' : ''\r\n  const ErrorCSS = !!error ? 'input__placeholder_error' : ''\r\n\r\n  return (\r\n    <div className={calssName}>\r\n      <div onBlur={onBlur} className={`input ${focus ? 'input_focus' : ''}`}>\r\n        {!!placeholder && (\r\n          <label\r\n            htmlFor={id}\r\n            className={`input__placeholder ${filledCSS} ${focusCSS} ${ErrorCSS}`}\r\n          >\r\n            {placeholder}\r\n          </label>\r\n        )}\r\n        <input\r\n          id={id}\r\n          className={`input_custom ${!!error ? 'input_error' : ''}`}\r\n          value={value}\r\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => onChange?.(e.target.value)}\r\n          onFocus={onFocus}\r\n          type={type === 'password' && !showPass ? 'password' : 'text'}\r\n        />\r\n        {!!value && type === 'password' && (\r\n          <label\r\n            htmlFor={id}\r\n            className='input__postfix'\r\n            onClick={() => setShowPass(!showPass)}\r\n          >\r\n            {showPass ? 'Скрыть' : 'Показать' }\r\n          </label>\r\n        )}\r\n      </div>\r\n      {!!error && <div className='input__error'>{error}</div>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input","import React from 'react'\r\nimport './button.scss'\r\n\r\ninterface Props {\r\n  title: string\r\n  onClick: () => void\r\n  type?: 'primary' | 'secondary'\r\n}\r\n\r\nconst Button = ({ title, onClick, type = 'primary' }: Props) => {\r\n  return (\r\n    <div\r\n      tabIndex={0}\r\n      className={`btn btn_${type}`}\r\n      onClick={onClick}\r\n    >\r\n      <span>{title}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Button","export const postSignIn = async ({ login, password }: { login: string; password: string }) => {\r\n  const user = {\r\n    login,\r\n    password,\r\n  }\r\n\r\n  const res = await fetch('http://ec2-18-117-84-227.us-east-2.compute.amazonaws.com/login', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(user)\r\n  })\r\n\r\n  if (res.status === 204) return { login }\r\n  return {}\r\n}\r\n\r\nexport const postRegistration = async ({ login, password, email }: { login: string; password: string, email: string }) => {\r\n  const user = {\r\n    login,\r\n    password,\r\n    email,\r\n  }\r\n\r\n  const res = await fetch('http://ec2-18-117-84-227.us-east-2.compute.amazonaws.com/register', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(user)\r\n  })\r\n\r\n  if (res.status === 204) return { login }\r\n  return {}\r\n}\r\n","import { IReduxAction } from '../types'\r\n\r\ninterface AuthState {\r\n  readonly fetching: boolean\r\n}\r\n\r\nconst initialState: AuthState = {\r\n  fetching: false\r\n}\r\n\r\ntype AuthAction =\r\n  | IReduxAction<typeof REQUEST_AUTH>\r\n  | IReduxAction<typeof SET_AUTH>\r\n  | IReduxAction<typeof SET_AUTH_ERROR>\r\n\r\n// types\r\nconst REQUEST_AUTH = 'REQUEST_AUTH'\r\nconst SET_AUTH = 'SET_AUTH'\r\nconst SET_AUTH_ERROR = 'SET_AUTH_ERROR'\r\n\r\n// actions\r\nexport const requestAuthAction = () => ({ type: REQUEST_AUTH, })\r\nexport const setAuthAction = () => ({ type: SET_AUTH, })\r\nexport const setAuthErrorAction = () => ({ type: SET_AUTH_ERROR, })\r\n\r\n// reducer\r\nconst authReducer = (state = initialState, action: AuthAction) => {\r\n  switch (action.type) {\r\n    case REQUEST_AUTH:\r\n      return { ...state, fetching: true }\r\n    case SET_AUTH:\r\n    case SET_AUTH_ERROR:\r\n      return { ...state, fetching: false }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default authReducer\r\n","import { IReduxAction } from '../types'\r\n\r\ninterface UserState {\r\n  readonly login: string\r\n  readonly fetching: boolean\r\n}\r\n\r\nconst initialState: UserState = {\r\n  login: '',\r\n  fetching: false\r\n}\r\n\r\ntype AuthAction =\r\n  | IReduxAction<typeof REQUEST_USER>\r\n  | IReduxAction<typeof SET_USER, string>\r\n  | IReduxAction<typeof SET_USER_ERROR>\r\n\r\n// types\r\nconst REQUEST_USER = 'REQUEST_USER'\r\nconst SET_USER = 'SET_USER'\r\nconst SET_USER_ERROR = 'SET_USER_ERROR'\r\n\r\n// actions\r\nexport const requestUserAction = () => ({ type: REQUEST_USER, })\r\nexport const setUserAction = (login: string) => ({ type: SET_USER, payload: login })\r\nexport const setUserErrorAction = () => ({ type: SET_USER_ERROR, })\r\n\r\n// reducer\r\nconst userReducer = (state = initialState, action: AuthAction) => {\r\n  switch (action.type) {\r\n    case REQUEST_USER:\r\n      return { ...state, fetching: true }\r\n    case SET_USER:\r\n      return { ...state, fetching: false, login: action.payload }\r\n    case SET_USER_ERROR:\r\n      return { ...state, fetching: false, login: '' }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default userReducer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Input, Button } from '../../components/index'\r\nimport { SwitchTransition, CSSTransition } from 'react-transition-group'\r\nimport { validationEmail, validationLogin, validationPassword } from '../../utils/validation'\r\nimport { postSignIn, postRegistration } from '../../api'\r\nimport { requestAuthAction, setAuthAction } from '../../store/reducers/auth'\r\nimport { setUserAction } from '../../store/reducers/user'\r\nimport { RootState } from '../../store'\r\nimport './auth.scss'\r\n\r\ninterface Props { }\r\n\r\nconst AuthView = (props: Props) => {\r\n  const [reg, setReg] = useState(false)\r\n  const [login, setLogin] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [loginError, setLoginError] = useState('')\r\n  const [passwordError, setPasswordError] = useState('')\r\n  const [emailError, setEmailError] = useState('')\r\n  const nodeRef = React.useRef(null)\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const userLogin = useSelector((state: RootState) => state.user.login)\r\n\r\n  useEffect(() => {\r\n    if (!!userLogin) {\r\n      history.replace('/main')\r\n    }\r\n  }, [userLogin, history])\r\n\r\n  const validation = (): boolean => {\r\n    const loginError = validationLogin(login)\r\n    const passwordError = validationPassword(password)\r\n    const emailError = validationEmail(email)\r\n\r\n    setEmailError(emailError)\r\n    setLoginError(loginError)\r\n    setPasswordError(passwordError)\r\n\r\n    if (reg) return !loginError && !passwordError && !emailError\r\n    return !loginError && !passwordError\r\n  }\r\n\r\n  const sendForm = async () => {\r\n    const isValid = validation()\r\n    if (isValid) {\r\n      dispatch(requestAuthAction())\r\n      const res = reg\r\n        ? await postRegistration({ login, password, email })\r\n        : await postSignIn({ login, password })\r\n      dispatch(setAuthAction())\r\n      if (!!res.login) dispatch(setUserAction(res.login))\r\n    }\r\n  }\r\n\r\n  const resetFormState = () => {\r\n    setLogin('')\r\n    setPassword('')\r\n    setEmail('')\r\n    setEmailError('')\r\n    setLoginError('')\r\n    setPasswordError('')\r\n  }\r\n\r\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    sendForm()\r\n  }\r\n\r\n  return (\r\n    <div className='auth-view'>\r\n      <div className='auth-view__content'>\r\n        <SwitchTransition mode='out-in'>\r\n          <CSSTransition\r\n            key={Number(reg)}\r\n            nodeRef={nodeRef} in timeout={250}\r\n            classNames=\"fade\"\r\n          >\r\n            <form ref={nodeRef} onSubmit={(e) => onSubmit(e)}>\r\n              <input className='auth-view__submit' type='submit' value='' />\r\n              <div className='auth-view__title'>{!reg ? 'Вход' : 'Регистрация'}</div>\r\n              <Input\r\n                orderId={1}\r\n                calssName={`auth-view__input_${!loginError ? 'default' : 'error'}`}\r\n                placeholder='Введите имя'\r\n                value={login}\r\n                error={loginError}\r\n                onChange={(value) => {\r\n                  setLogin(value)\r\n                  setLoginError('')\r\n                }}\r\n              />\r\n              <Input\r\n                orderId={2}\r\n                calssName={`auth-view__input_${!passwordError ? 'default' : 'error'}`}\r\n                placeholder='Введите пароль'\r\n                type='password'\r\n                value={password}\r\n                error={passwordError}\r\n                onChange={(value) => {\r\n                  setPassword(value)\r\n                  setPasswordError('')\r\n                }}\r\n              />\r\n              {reg && (\r\n                <Input\r\n                  orderId={3}\r\n                  calssName={`auth-view__input_${!emailError ? 'default' : 'error'}`}\r\n                  placeholder='Введите почту'\r\n                  value={email}\r\n                  error={emailError}\r\n                  onChange={(value) => {\r\n                    setEmail(value)\r\n                    setEmailError('')\r\n                  }}\r\n                />\r\n              )}\r\n\r\n              <Button\r\n                title={!reg ? 'Войти' : 'Отправить'}\r\n                onClick={sendForm}\r\n              />\r\n              <Button\r\n                title={!reg ? 'Зарегистрироваться' : 'Уже есть аккаунт'}\r\n                type='secondary'\r\n                onClick={() => {\r\n                  setReg(!reg)\r\n                  resetFormState()\r\n                }}\r\n              />\r\n            </form>\r\n          </CSSTransition>\r\n        </SwitchTransition>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AuthView\r\n","export const validationLogin = (login: string) => {\r\n  if (login.length < 4) return 'Должно быть не менее 4 символов'\r\n  return ''\r\n}\r\n\r\nexport const validationPassword = (password: string) => {\r\n  if (password.length < 6) return 'Должно быть не менее 6 символов'\r\n  return ''\r\n}\r\n\r\nexport const validationEmail = (email: string) => {\r\n  const reg = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n  const isValid = reg.test(email.toLowerCase())\r\n  if(!isValid) return 'Не валидный email '\r\n  return ''\r\n}\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport { Main, AuthView } from './views'\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/main\">\r\n          <Main />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <AuthView />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createStore, combineReducers } from 'redux'\r\nimport auth from './reducers/auth'\r\nimport user from './reducers/user'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nconst rootReducer = combineReducers({\r\n  auth,\r\n  user,\r\n})\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools()\r\n)\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\n\r\nexport default store\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './store'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}